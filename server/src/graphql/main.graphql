directive @external on FIELD_DEFINITION

directive @requires(fields: _FieldSet!) on FIELD_DEFINITION

directive @provides(fields: _FieldSet!) on FIELD_DEFINITION

directive @key(fields: _FieldSet!) on OBJECT | INTERFACE

scalar _FieldSet

interface Base {
  _id: ID!
  createdAt: Date!
}

input CreateImageInput {
  altText: String
  image: Upload!
  name: String!
}

input CreateProjectInput {
  demo: String
  description: String!
  slug: String!
  sourceCode: String!
  title: String!
}

scalar Date

type File {
  encoding: String!
  filename: String!
  mimetype: String!
}

type Image implements Base {
  _id: ID!
  altText: String!
  createdAt: Date!
  encoding: String!
  mimetype: String!
  name: String!
  url: String!
}

enum ImagesBy {
  ALT_TEXT
  CREATED_AT
  NAME
}

input ImagesFilter {
  after: Date
  before: Date
}

input ImagesSort {
  by: ImagesBy = NAME
  order: Order = ASC
}

type Mutation {
  createImages(input: [CreateImageInput!]!, projectId: ID!): [Image!]
  createProject(images: [CreateImageInput!], input: CreateProjectInput!): Project!
  deleteImage(id: ID!): Image!
  deleteProject(id: ID!): Project!
  singleUpload(upload: Upload!): File!
  updateImage(id: ID!, input: UpdateImageInput!): Image!
  updateProject(id: ID!, input: UpdateProjectInput!): Project!
}

enum Order {
  ASC
  DESC
}

type Project implements Base {
  _id: ID!
  createdAt: Date!
  demo: String
  description: String!
  images: [Image!]!
  slug: String!
  sourceCode: String!
  title: String!
}

enum ProjectsBy {
  CREATED_AT
  TITLE
}

input ProjectsFilter {
  after: Date
  before: Date
  hasDemo: Boolean
  hasImage: Boolean
}

input ProjectsSort {
  by: ProjectsBy = TITLE
  order: Order = ASC
}

type Query {
  image(id: ID!): Image!
  images(sort: ImagesSort, where: ImagesFilter): [Image!]!
  project(slug: String!): Project!
  projects(sort: ProjectsSort, where: ProjectsFilter): [Project!]!
}

input UpdateImageInput {
  altText: String
  image: Upload
  name: String
}

input UpdateProjectInput {
  demo: String
  description: String
  slug: String
  sourceCode: String
  title: String
}

scalar Upload